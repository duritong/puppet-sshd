# This file is managed by Puppet, all local modifications will be overwritten
#	$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

<% unless (s=scope.lookupvar('::sshd::head_additional_options')).empty? -%>
<%= s %>

<% end -%>
<% scope.lookupvar('::sshd::ports').to_a.each do |port| -%>
<% if port == 'off' -%>
#Port -- disabled by puppet
<% else -%>
Port <%= port %>
<% end -%>
<% end -%>
#AddressFamily any
<% scope.lookupvar('::sshd::listen_address').to_a.each do |address| -%>
ListenAddress <%= address %>
<% end -%>

HostKey /etc/ssh/ssh_host_rsa_key
<% if scope.lookupvar('sshd::use_host_dsa_key') -%>
HostKey /etc/ssh/ssh_host_dsa_key
<% end -%>
<% if scope.lookupvar('sshd::use_host_ecdsa_key') -%>
HostKey /etc/ssh/ssh_host_ecdsa_key
<% end -%>
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# Logging
#SyslogFacility AUTH
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin <%= scope.lookupvar('::sshd::permit_root_login') %>
StrictModes <%= scope.lookupvar('::sshd::strict_modes') %>
#MaxAuthTries 6
#MaxSessions 10

PubkeyAuthentication <%= scope.lookupvar('::sshd::pubkey_authentication') %>

# Expect .ssh/authorized_keys2 to be disregarded by default in future.
AuthorizedKeysFile <%= scope.lookupvar('::sshd::authorized_keys_file') %>

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
HostbasedAuthentication <%= scope.lookupvar('::sshd::hostbased_authentication') %>
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts <%= scope.lookupvar('::sshd::ignore_rhosts') %>

# To disable tunneled clear text passwords, change to no here!
PasswordAuthentication <%= scope.lookupvar('::sshd::password_authentication') %>
PermitEmptyPasswords <%= scope.lookupvar('::sshd::permit_empty_passwords') %>

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
ChallengeResponseAuthentication <%= scope.lookupvar('::sshd::challenge_response_authentication') %>

# Kerberos options
KerberosAuthentication <%= scope.lookupvar('::sshd::kerberos_authentication') %>
KerberosOrLocalPasswd <%= scope.lookupvar('::sshd::kerberos_orlocalpasswd') %>
KerberosTicketCleanup <%= scope.lookupvar('::sshd::kerberos_ticketcleanup') %>
#KerberosGetAFSToken no

# GSSAPI options
GSSAPIAuthentication <%= scope.lookupvar('::sshd::gssapi_authentication') %>
GSSAPICleanupCredentials <%= scope.lookupvar('::sshd::gssapi_cleanupcredentials') %>
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM <%= scope.lookupvar('::sshd::use_pam') %>

AllowAgentForwarding <%= scope.lookupvar('::sshd::agent_forwarding') %>
AllowTcpForwarding <%= scope.lookupvar('::sshd::tcp_forwarding') %>
#GatewayPorts no
X11Forwarding <%= scope.lookupvar('::sshd::x11_forwarding') %>
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes
PrintMotd <%= scope.lookupvar('::sshd::print_motd') %>
#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none
# do not reveal debian version (default is yes)
DebianBanner no

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

# override default of no subsystems
Subsystem      sftp    <%= (s=scope.lookupvar('::sshd::sftp_subsystem')).empty? ? '/usr/lib/openssh/sftp-server' : s %>

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server
UseDNS no
GSSAPIAuthentication no

<% unless (s=scope.lookupvar('::sshd::allowed_users')).empty? -%>
AllowUsers <%= s %>
<% end -%>
<% unless (s=scope.lookupvar('::sshd::allowed_groups')).empty? -%>
AllowGroups <%= s %>
<%- end -%>

<% if s=scope.lookupvar('sshd::hardened') -%>
KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256<% if "#{s}".include?("+sha1") %>,diffie-hellman-group-exchange-sha1<% end %>
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com<% if "#{s}".include?("+sha1") %>,hmac-sha1<% end %>
<% end -%>

<% unless (s=scope.lookupvar('::sshd::tail_additional_options')).empty? -%>
<%= s %>
<% end -%>
